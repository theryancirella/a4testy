{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Desktop\\\\a4\\\\my-app\\\\src\\\\Itemlist.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass Itemlist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  async getItems() {\n    fetch('/items').then(res => res.json()).then(items => this.setState({\n      items: items\n    }));\n  }\n\n  componentDidMount() {\n    fetch('/items').then(res => res.json()).then(items => this.setState({\n      items\n    }));\n  }\n\n  async addItem(e) {\n    const userText = document.getElementById(\"userInput\");\n    let newItem = userText.value; //let user = \"testuser\"; //this will be the user's username\n\n    fetch(\"/addItem\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        dream: newItem\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(res => this.getItems()); // reset form\n\n    userText.value = \"\";\n    this.getItems();\n  }\n\n  async modifyItem(item) {\n    console.log(item);\n    const userText = document.getElementById(\"userInput\");\n\n    if (userText.value === \"\") {\n      this.deleteItem(item._id);\n    } else {\n      this.editItem(item._id);\n    }\n\n    this.getItems();\n  }\n\n  async editItem(id) {\n    const userText = document.getElementById(\"userInput\");\n    let newEdit = userText.value;\n    fetch(\"/edit\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        dream: newEdit,\n        id\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => this.getItems());\n    this.getItems();\n  }\n\n  async deleteItem(id) {\n    fetch(\"/delete\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        id\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => this.getItems());\n    this.getItems();\n  }\n\n  logoutButton() {\n    const userText = document.getElementById(\"userInput\");\n    fetch(\"/logout\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        logout: userText.value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json());\n  } //{this.state.items.map(item => <div key={item._id}>{item.dream}</div>)}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Virtual Shopping List\")), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"New Grocery Item\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"dream\",\n      type: \"text\",\n      id: \"userInput\",\n      maxlength: \"100\",\n      required: true,\n      placeholder: \"Type item here!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"submit-dream\",\n      onClick: e => this.addItem(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Add Item\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 113\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 119\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      class: \"dreams\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"dreams\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, this.state.items.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item._id,\n        onClick: e => this.modifyItem(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 44\n        }\n      }, item.dream);\n    }))), \"To edit item, enter replacement value in item box and click the list item to edit.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 111\n      }\n    }), \"To remove item, click a list item to remove with nothing in the item input box.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 108\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 114\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"logout\",\n      onClick: e => this.logoutButton(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"Logout\"))));\n  }\n\n}\n\nexport default Itemlist;","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/a4/my-app/src/Itemlist.js"],"names":["React","Component","Itemlist","constructor","props","state","items","getItems","fetch","then","res","json","setState","componentDidMount","addItem","e","userText","document","getElementById","newItem","value","method","body","JSON","stringify","dream","headers","response","modifyItem","item","console","log","deleteItem","_id","editItem","id","newEdit","logoutButton","logout","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Itemlist extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            items: []\r\n        }\r\n    }\r\n\r\n    async getItems() {\r\n        fetch('/items')\r\n            .then(res => res.json())\r\n            .then(items => this.setState({ items: items }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/items')\r\n            .then(res => res.json())\r\n            .then(items => this.setState({ items }));\r\n    }\r\n\r\n    async addItem(e) {\r\n        const userText = document.getElementById(\"userInput\")\r\n        let newItem = userText.value;\r\n        //let user = \"testuser\"; //this will be the user's username\r\n\r\n        fetch(\"/addItem\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ dream: newItem }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => this.getItems())\r\n        // reset form\r\n        userText.value = \"\";\r\n        this.getItems()\r\n    }\r\n\r\n    async modifyItem(item) {\r\n        console.log(item)\r\n        const userText = document.getElementById(\"userInput\")\r\n        if (userText.value === \"\") {\r\n            this.deleteItem(item._id);\r\n        }\r\n        else {\r\n            this.editItem(item._id);\r\n        }\r\n        this.getItems()\r\n    }\r\n\r\n    async editItem(id) {\r\n        const userText = document.getElementById(\"userInput\")\r\n        let newEdit = userText.value;\r\n\r\n        fetch(\"/edit\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ dream: newEdit, id }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => this.getItems());\r\n        this.getItems()\r\n    }\r\n\r\n    async deleteItem(id) {\r\n        fetch(\"/delete\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ id }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => this.getItems());\r\n        this.getItems()\r\n    }\r\n\r\n    logoutButton() {\r\n        const userText = document.getElementById(\"userInput\")\r\n        fetch(\"/logout\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ logout: userText.value }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n    }\r\n\r\n    //{this.state.items.map(item => <div key={item._id}>{item.dream}</div>)}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <body>\r\n                    <header>\r\n                        <h1>Virtual Shopping List</h1>\r\n                    </header>\r\n                    <main>\r\n                        <label>\r\n                            New Grocery Item\r\n                                <input\r\n                                name=\"dream\"\r\n                                type=\"text\"\r\n                                id=\"userInput\"\r\n                                maxlength=\"100\"\r\n                                required\r\n                                placeholder=\"Type item here!\"\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\" id=\"submit-dream\" onClick={e => this.addItem(e)}>Add Item</button><br /><br />\r\n\r\n                        <section class=\"dreams\">\r\n                            <ul id=\"dreams\">\r\n                                {this.state.items.map(item => {\r\n                                    return <li key={item._id} onClick={e => this.modifyItem(item)}>{item.dream}</li>\r\n                                }\r\n                                )}\r\n                            </ul>\r\n                        </section>\r\n\r\n                            To edit item, enter replacement value in item box and click the list item to edit.<br />\r\n                            To remove item, click a list item to remove with nothing in the item input box.<br /><br />\r\n\r\n                        <button id=\"logout\" onClick={e => this.logoutButton()}>Logout</button>\r\n                    </main>\r\n                </body>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Itemlist"]},"metadata":{},"sourceType":"module"}